import {DBType, JfCondition} from 'base-cms' // from '@juanfv2/base-cms'
import {k} from './k'

const assets = k.routes.backEnd.assets

export const l = {
  misc: {
    k: k,
    slug: new DBType({label: 'Slug', field: 'stores.slug', type: 'string'} as DBType),
    csv: `${assets}images/admin/ic-csv.svg`,
    zip: `${assets}images/admin/ic-zip.svg`,
    pdf: `${assets}images/admin/ic-pdf.svg`,
    upload: `${assets}images/admin/ic-upload.svg`,
    loading: `${assets}images/admin/ic-loading.svg`,
    pageLimit: [
      new JfCondition('5', 5),
      new JfCondition('10', 10),
      new JfCondition('50', 50),
      new JfCondition('100', 100),
      new JfCondition('1,000', 1000),
      new JfCondition('10,000', 10000),
    ],
    filter_pag_regex: /[^0-9]/g,
  },
  msg: {
    error: 'Ha ocurrido un error',
    success: 'Operación realizada con éxito',
    warning: 'Atención',
    info: 'Información',
    confirm: 'Confirmar',
    confirmDelete: '¿Está seguro de eliminar este registro?',
    confirmDeleteMany: '¿Está seguro de eliminar los registros seleccionados?',
    confirmDeleteManyRows: '¿Está seguro de eliminar los registros seleccionados?',
    noData: 'No hay datos para mostrar',
  },
  /* -------------------------------------------------------------------------- */
  /* System                                                                     */
  /* -------------------------------------------------------------------------- */

  user: {
    tablePK: 'id',
    tableName: 'auth_users',
    ownName: 'Usuario',
    ownNamePlural: 'Usuarios',
    id: new DBType({label: '#', name: 'id', field: 'auth_users.id', type: 'pk'} as DBType),
    name: new DBType({label: 'Nombre', name: 'name', field: 'auth_users.name', type: 'string'} as DBType),
    email: new DBType({
      label: 'Correo electrónico',
      name: 'email',
      field: 'auth_users.email',
      type: 'string',
    } as DBType),
    password: new DBType({
      label: 'Contraseña',
      name: 'password',
      field: 'auth_users.password',
      type: 'string',
    } as DBType),
    email_verified_at: new DBType({
      label: 'Email_Verified_At',
      name: 'email_verified_at',
      field: 'auth_users.email_verified_at',
      type: 'date',
    } as DBType),
    disabled: new DBType({
      label: 'Deshabilitado',
      name: 'disabled',
      field: 'auth_users.disabled',
      type: 'boolean',
    } as DBType),
    phoneNumber: new DBType({
      label: 'Teléfono',
      name: 'phoneNumber',
      field: 'auth_users.phoneNumber',
      type: 'string',
    } as DBType),
    uid: new DBType({label: 'Uid', name: 'uid', field: 'auth_users.uid', type: 'string'} as DBType),
    role_id: new DBType({label: 'Role_Id', name: 'role_id', field: 'auth_users.role_id', type: 'string'} as DBType),
    country_id: new DBType({
      label: 'Country_Id',
      name: 'country_id',
      field: 'auth_users.country_id',
      type: 'string',
    } as DBType),
    region_id: new DBType({
      label: 'Region_Id',
      name: 'region_id',
      field: 'auth_users.region_id',
      type: 'string',
    } as DBType),
    city_id: new DBType({label: 'City_Id', name: 'city_id', field: 'auth_users.city_id', type: 'string'} as DBType),
    remember_token: new DBType({
      label: 'Remember_Token',
      name: 'remember_token',
      field: 'auth_users.remember_token',
      type: 'string',
    } as DBType),
    countryName: new DBType({
      name: 'countryName',
      label: 'País',
      field: 'countryName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    regionName: new DBType({
      name: 'regionName',
      label: 'Region',
      field: 'regionName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    cityName: new DBType({
      name: 'cityName',
      label: 'Ciudad',
      field: 'cityName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    roleName: new DBType({
      name: 'roleName',
      label: 'Rol',
      field: 'roleName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    personName: new DBType({
      name: 'person',
      label: 'Person',
      field: 'personName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    accountName: new DBType({
      name: 'account',
      label: 'Account',
      field: 'accountName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    roles: new DBType({
      name: 'roles',
      label: 'Roles',
      field: 'role.id',
      type: 'projection',
      allowExport: false,
      allowImport: false,
    } as DBType),
    rolesName: new DBType({
      name: 'roleName',
      label: 'Role',
      field: 'roleName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    photo: new DBType({
      label: 'Foto',
      name: 'photo',
      field: 'photo',
      type: 'projection',
      allowExport: false,
      allowImport: false,
    } as DBType),
  },

  role: {
    tablePK: 'id',
    tableName: 'auth_roles',
    ownName: 'Rol',
    ownNamePlural: 'Roles',
    id: new DBType({label: '#', name: 'id', field: 'auth_roles.id', type: 'pk'} as DBType),
    name: new DBType({label: 'Nombre', name: 'name', field: 'auth_roles.name', type: 'string'} as DBType),
    description: new DBType({
      label: 'Descripción',
      name: 'description',
      field: 'auth_roles.description',
      type: 'string',
    } as DBType),
    permissions: new DBType({
      name: 'permissions',
      label: 'Permission #',
      field: 'permission.id',
      type: 'number',
      allowExport: false,
      allowImport: false,
    } as DBType),
    permissionName: new DBType({
      name: 'permissionName',
      label: 'Permission',
      field: 'permissionName',
      type: 'string',
      allowExport: false,
      allowImport: false,
    } as DBType),
  },

  permission: {
    tablePK: 'id',
    tableName: 'auth_permissions',
    ownName: 'Permiso',
    ownNamePlural: 'Permisos',
    // Raw attributes
    id: new DBType({label: '#', field: 'auth_permissions.id', type: 'number'} as DBType),
    icon: new DBType({label: 'Icono', field: 'auth_permissions.icon', type: 'string'} as DBType),
    name: new DBType({label: 'Nombre', field: 'auth_permissions.name', type: 'string'} as DBType),
    urlBackEnd: new DBType({label: 'Url Back End', field: 'auth_permissions.urlBackEnd', type: 'string'} as DBType),
    urlFrontEnd: new DBType({label: 'Url Front End', field: 'auth_permissions.urlFrontEnd', type: 'string'} as DBType),
    isSection: new DBType({label: 'Is Section?', field: 'auth_permissions.isSection', type: 'boolean'} as DBType),
    isVisible: new DBType({label: 'Is Visible?', field: 'auth_permissions.isVisible', type: 'boolean'} as DBType),
    permission_id: new DBType({
      label: 'Permission Id',
      field: 'auth_permissions.permission_id',
      type: 'number',
    } as DBType),
    orderInMenu: new DBType({label: 'Order In Menu', field: 'auth_permissions.orderInMenu', type: 'number'} as DBType),
  },

  person: {
    tablePK: 'id',
    tableName: 'auth_people',
    ownName: 'Persona',
    ownNamePlural: 'Personas',
    id: new DBType({label: '#', name: 'id', field: 'auth_people.id', type: 'number'} as DBType),
    firstName: new DBType({
      label: 'Nombre',
      name: 'firstName',
      field: 'auth_people.firstName',
      type: 'string',
    } as DBType),
    lastName: new DBType({
      label: 'Apellido',
      name: 'lastName',
      field: 'auth_people.lastName',
      type: 'string',
    } as DBType),
    cellPhone: new DBType({
      label: 'Teléfono',
      name: 'cellPhone',
      field: 'auth_people.cellPhone',
      type: 'string',
    } as DBType),
    birthDate: new DBType({
      label: 'Fecha de nacimiento',
      name: 'birthDate',
      field: 'auth_people.birthDate',
      type: 'date',
    } as DBType),
    address: new DBType({label: 'Dirección', name: 'address', field: 'auth_people.address', type: 'string'} as DBType),
    neighborhood: new DBType({
      label: 'Vecindario',
      name: 'neighborhood',
      field: 'auth_people.neighborhood',
      type: 'string',
    } as DBType),
    userName: new DBType({
      name: 'userName',
      label: 'User',
      field: 'userName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
  },

  account: {
    tablePK: 'id',
    tableName: 'auth_accounts',
    ownName: 'Cuenta',
    ownNamePlural: 'Cuentas',
    id: new DBType({label: '#', name: 'id', field: 'auth_accounts.id', type: 'number'} as DBType),
    firstName: new DBType({
      label: 'Nombre',
      name: 'firstName',
      field: 'auth_accounts.firstName',
      type: 'string',
    } as DBType),
    lastName: new DBType({
      label: 'Apellido',
      name: 'lastName',
      field: 'auth_accounts.lastName',
      type: 'string',
    } as DBType),
    cellPhone: new DBType({
      label: 'Teléfono',
      name: 'cellPhone',
      field: 'auth_accounts.cellPhone',
      type: 'string',
    } as DBType),
    birthDate: new DBType({
      label: 'Cumpleaños',
      name: 'birthDate',
      field: 'auth_accounts.birthDate',
      type: 'date',
    } as DBType),
    address: new DBType({
      label: 'Dirección',
      name: 'address',
      field: 'auth_accounts.address',
      type: 'string',
    } as DBType),
    neighborhood: new DBType({
      label: 'Vecindario',
      name: 'neighborhood',
      field: 'auth_accounts.neighborhood',
      type: 'string',
    } as DBType),
    userName: new DBType({
      name: 'userName',
      label: 'User',
      field: 'userName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
  },

  visorLogError: {
    tablePK: 'id',
    tableName: 'visor_log_errors',
    ownName: 'Visualización de error',
    ownNamePlural: 'Visualización de errores',
    id: new DBType({label: '#', name: 'id', field: 'visor_log_errors.id', type: 'pk'} as DBType),
    payload: new DBType({
      label: 'Fallo',
      name: 'payload',
      field: 'visor_log_errors.payload',
      type: 'string',
    } as DBType),
    error: new DBType({
      label: 'Fallo',
      name: 'error',
      field: 'visor_log_errors.payload',
      type: 'projection',
      allowExport: false,
      allowImport: false,
      sorting: false,
    } as DBType),
    queue: new DBType({label: 'Proceso', name: 'queue', field: 'visor_log_errors.queue', type: 'string'} as DBType),
    container_id: new DBType({
      label: '[id]',
      name: 'container_id',
      field: 'visor_log_errors.container_id',
      type: 'number',
    } as DBType),
    created_at: new DBType({
      label: 'Fecha',
      name: 'created_at',
      field: 'visor_log_errors.created_at',
      type: 'date-time',
    } as DBType),
  },
  /* -------------------------------------------------------------------------- */
  /* Countries                                                                  */
  /* -------------------------------------------------------------------------- */

  country: {
    tablePK: 'id',
    tableName: 'countries',
    ownName: 'País',
    ownNamePlural: 'Países',
    id: new DBType({label: '#', name: 'id', field: 'countries.id', type: 'pk'} as DBType),
    name: new DBType({label: 'Nombre', name: 'name', field: 'countries.name', type: 'string'} as DBType),
    code: new DBType({label: 'Código', name: 'code', field: 'countries.code', type: 'string'} as DBType),
    // country_id: new DBType({name: 'country_id', label: 'User #', field: 'user.id', type: 'number'} as DBType),
    // userName: new DBType({ name: 'userName', label: 'User', field: 'userName', type: 'string', allowExport: true, allowImport: false, } as DBType),
    // country_id: new DBType({name: 'country_id', label: 'City #', field: 'city.id', type: 'number'} as DBType),
    // cityName: new DBType({ name: 'cityName', label: 'City', field: 'cityName', type: 'string', allowExport: true, allowImport: false, } as DBType),
    // country_id: new DBType({name: 'country_id', label: 'Region #', field: 'region.id', type: 'number'} as DBType),
    // regionName: new DBType({ name: 'regionName', label: 'Region', field: 'regionName', type: 'string', allowExport: true, allowImport: false, } as DBType),
  },

  region: {
    tablePK: 'id',
    tableName: 'regions',
    ownName: 'Departamento/Provincia',
    ownNamePlural: 'Departamentos/Provincias',
    id: new DBType({label: '#', name: 'id', field: 'regions.id', type: 'pk'} as DBType),
    name: new DBType({label: 'Nombre', name: 'name', field: 'regions.name', type: 'string'} as DBType),
    code: new DBType({label: 'Código', name: 'code', field: 'regions.code', type: 'string'} as DBType),
    country_id: new DBType({
      label: 'Country_Id',
      name: 'country_id',
      field: 'regions.country_id',
      type: 'number',
    } as DBType),
    // region_id:        new DBType({label: 'User #', name: 'region_id',          field: 'user.id',    type: 'number'} as DBType),
    // userName: new DBType({label: 'User',   name: 'userName', field: 'userName', type: 'string', allowExport: true, allowImport:false} as DBType),
    // country_id:        new DBType({label: 'Country #', name: 'country_id',          field: 'country.id',    type: 'number'} as DBType),
    countryName: new DBType({
      label: 'País',
      name: 'countryName',
      field: 'countryName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    // region_id:        new DBType({label: 'City #', name: 'region_id',          field: 'city.id',    type: 'number'} as DBType),
    // cityName: new DBType({label: 'City',   name: 'cityName', field: 'cityName', type: 'string', allowExport: true, allowImport:false} as DBType),
  },

  city: {
    tablePK: 'id',
    tableName: 'cities',
    ownName: 'Ciudad',
    ownNamePlural: 'Ciudades',
    id: new DBType({label: '#', name: 'id', field: 'cities.id', type: 'pk'} as DBType),
    name: new DBType({label: 'Nombre', name: 'name', field: 'cities.name', type: 'string'} as DBType),
    latitude: new DBType({label: 'Latitud', name: 'latitude', field: 'cities.latitude', type: 'string'} as DBType),
    longitude: new DBType({label: 'Longitud', name: 'longitude', field: 'cities.longitude', type: 'string'} as DBType),
    country_id: new DBType({label: 'C #', name: 'country_id', field: 'cities.country_id', type: 'number'} as DBType),
    region_id: new DBType({label: 'R #', name: 'region_id', field: 'cities.region_id', type: 'number'} as DBType),
    // city_id:        new DBType({label: 'User #', name: 'city_id',          field: 'user.id',    type: 'number'} as DBType),
    // userName: new DBType({label: 'User',   name: 'userName', field: 'userName', type: 'string', allowExport: true, allowImport:false} as DBType),
    // country_id:        new DBType({label: 'Country #', name: 'country_id',          field: 'country.id',    type: 'number'} as DBType),
    countryName: new DBType({
      label: 'País',
      name: 'countryName',
      field: 'countryName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
    // region_id:        new DBType({label: 'Region #', name: 'region_id',          field: 'region.id',    type: 'number'} as DBType),
    regionName: new DBType({
      label: 'Region',
      name: 'regionName',
      field: 'regionName',
      type: 'string',
      allowExport: true,
      allowImport: false,
    } as DBType),
  },

  /* -------------------------------------------------------------------------- */
  /* Misc                                                                       */
  /* -------------------------------------------------------------------------- */
}

// console.log('l', l)
