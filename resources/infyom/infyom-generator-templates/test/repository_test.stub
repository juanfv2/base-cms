<?php

namespace $NAMESPACE_REPOSITORIES_TESTS$;

use $NAMESPACE_TESTS$\TestCase;
use $NAMESPACE_TESTS$\ApiTestTrait;
use $NAMESPACE_MODEL$\$MODEL_NAME$;

use Illuminate\Support\Facades\App;
use $NAMESPACE_REPOSITORY$\$MODEL_NAME$Repository;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class $MODEL_NAME$RepositoryTest extends TestCase
{
    use ApiTestTrait, DatabaseTransactions;

    /**
     * @var $MODEL_NAME$Repository
     */
    protected $modelRepository;

    public function setUp() : void
    {
        parent::setUp();
        $this->modelRepository = App::make($MODEL_NAME$Repository::class);
    }

    /** @test */
    public function repo_create_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::factory()->make()->toArray();

        $created$MODEL_NAME$ = $this->modelRepository->create($$MODEL_NAME_CAMEL$);

        $created$MODEL_NAME$ = $created$MODEL_NAME$->toArray();
        $this->assertArrayHasKey('id', $created$MODEL_NAME$);
        $this->assertNotNull($created$MODEL_NAME$['id'], 'Created $MODEL_NAME$ must have id specified');
        $this->assertNotNull($MODEL_NAME$::find($created$MODEL_NAME$['id']), '$MODEL_NAME$ with given id must be in DB');
        $this->assertModelData($$MODEL_NAME_CAMEL$, $created$MODEL_NAME$);
    }

    /** @test */
    public function repo_read_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::factory()->create();

        $db$MODEL_NAME$ = $this->modelRepository->find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);

        $db$MODEL_NAME$ = $db$MODEL_NAME$->toArray();
        $this->assertModelData($$MODEL_NAME_CAMEL$->toArray(), $db$MODEL_NAME$);
    }

    /** @test */
    public function repo_update_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::factory()->create();
        $fake$MODEL_NAME$ = $MODEL_NAME$::factory()->make()->toArray();

        $updated$MODEL_NAME$ = $this->modelRepository->update($$MODEL_NAME_CAMEL$, $fake$MODEL_NAME$);

        $this->assertModelData($fake$MODEL_NAME$, $updated$MODEL_NAME$->toArray());
        $db$MODEL_NAME$ = $this->modelRepository->find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);
        $this->assertModelData($fake$MODEL_NAME$, $db$MODEL_NAME$->toArray());
    }

    /** @test */
    public function repo_delete_$MODEL_NAME_SNAKE$()
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::factory()->create();

        $resp = $this->modelRepository->delete($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$);

        $this->assertTrue($resp);
        $this->assertNull($MODEL_NAME$::find($$MODEL_NAME_CAMEL$->$PRIMARY_KEY_NAME$), '$MODEL_NAME$ should not exist in DB');
    }
}
