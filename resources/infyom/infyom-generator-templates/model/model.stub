<?php

namespace $NAMESPACE_MODEL$;

use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;
$SOFT_DELETE_IMPORT$
$DOCS$
class $MODEL_NAME$ extends Model
{ // , HasFactory;
$SOFT_DELETE$
    public $table = '$TABLE_NAME$';
    $TIMESTAMPS$
$SOFT_DELETE_DATES$
$CONNECTION$
$PRIMARY$
    public $fillable = [
        $FIELDS$
    ];

    /**
     * The attributes that should be casted to native types.
     *
     * @var array
     */
    protected $casts = [
        $CAST$
    ];

    /**
     * Validation rules
     *
     * @var array
     */
    public static $rules = [
        $RULES$
    ];

    public $hidden = [
        'createdBy', 'updatedBy', 'created_at', 'updated_at', 'deleted_at'
    ];

    public function getCreatedByPersonAttribute()
    {
        $value = cache()->remember("createdBy-{$this->createdBy}", 3600, function () {
            return DB::table('auth_people')
                ->select(DB::raw("concat(firstName, ' ', lastName) as fullName"))
                ->where('id', $this->createdBy)
                ->value('fullName');
        });
        return $value;
    }

    public function getUpdatedByPersonAttribute()
    {
        $value = cache()->remember("updatedBy-{$this->updatedBy}", 3600, function () {
            return DB::table('auth_people')
                ->select(DB::raw("concat(firstName, ' ', lastName) as fullName"))
                ->where('id', $this->updatedBy)
                ->value('fullName');
        });
        return $value;
    }

    $RELATIONS$
}
