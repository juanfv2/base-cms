<?php

namespace $NAMESPACE_API_TESTS$;

use $NAMESPACE_MODEL$\$MODEL_NAME$;
use $NAMESPACE_TESTS$\TestCase;
use Juanfv2\BaseCms\Traits\ApiTestTrait;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class $MODEL_NAME$ApiTest extends TestCase
{
    use ApiTestTrait,
        WithoutMiddleware,
        DatabaseTransactions
        // RefreshDatabase
        // ...
    ;

    /** @test */
    public function api_index_$MODEL_NAME_SNAKE$()
    {
        $this->withoutExceptionHandling();

        $created = 11;
        $limit   = 10;
        $offset  = 0;
        $models  = $MODEL_NAME$::factory($created)->create();

        $this->response = $this->json('POST', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.store', ['limit' => $limit, 'offset' => $offset, 'to_index' => 2]));

        // $this->response->dump();
        // dd($this->response->json());

        $this->assertJsonIndex($limit, $models[0]);
    }

    /** @test */
    public function api_create_$MODEL_NAME_SNAKE$()
    {
        // $this->withoutExceptionHandling();

        $model = $MODEL_NAME$::factory()->make()->toArray();

        $this->response = $this->actingAsAdmin('api')->json('POST', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.store'), $model);

        // $this->response->dump();
        // dd($this->response->json());

        $this->assertJsonModifications();
    }

    /** @test */
    public function api_read_$MODEL_NAME_SNAKE$()
    {
        $model = $MODEL_NAME$::factory()->create();

        $this->response = $this->actingAsAdmin('api')->json('GET', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.show', ['$MODEL_NAME_SNAKE$' => $model->$PRIMARY_KEY_NAME$]));

        $this->assertJsonShow($model);
    }

    /** @test */
    public function api_update_$MODEL_NAME_SNAKE$()
    {
        $model = $MODEL_NAME$::factory()->create();
        $modelEdited = $MODEL_NAME$::factory()->make()->toArray();

        $this->response = $this->actingAsAdmin('api')->json('PUT', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.update', ['$MODEL_NAME_SNAKE$' => $model->$PRIMARY_KEY_NAME$]), $modelEdited);

        $this->assertJsonModifications();
    }

    /** @test */
    public function api_delete_$MODEL_NAME_SNAKE$()
    {
        $model = $MODEL_NAME$::factory()->create();

        $this->response = $this->actingAsAdmin('api')->json('DELETE', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.destroy', ['$MODEL_NAME_SNAKE$' => $model->$PRIMARY_KEY_NAME$]));

        $this->assertApiSuccess();

        $this->response = $this->actingAsAdmin('api')->json('DELETE', route('$API_PREFIX$.$MODEL_NAME_PLURAL_SNAKE$.destroy', ['$MODEL_NAME_SNAKE$' => $model->$PRIMARY_KEY_NAME$]));

        $this->response->assertStatus(404);
    }
}
